cluster$withinss
cluster$tot.withinss
cluster$betweenss
library(FactoMineR)
HCPC(res = data)
HCPC(res = data,nb.clust = 3)
HCPC(res = data,nb.clust = 4)
HCPC(res = data,nb.clust = 5)
HCPC(res = data,nb.clust = 2)
HCPC(res = data,nb.clust = 3,iter.max = 100)
HCPC(res = data,nb.clust = 3)
mode<-HCPC(res = data,nb.clust = 3)
model<-HCPC(res = data,nb.clust = 3)
HCPC(res = data,nb.clust = 3)
HCPC(res = data,nb.clust = 3)
HCPC(res = data,nb.clust = 3,method = "average")
HCPC(res = data,nb.clust = 3,method = "centroid")
HCPC(res = data,nb.clust = 3,method = "median")
HCPC(res = data,nb.clust = 3,method = "complete")
HCPC(res = data[,1:11],nb.clust = 3,method = "complete")
HCPC(res = data[,1:11],nb.clust = 2,method = "complete")
model<-HCPC(res = data[,1:11],nb.clust = 2,method = "complete")
model$data.clust
model$desc.var
model$call
model$desc.ind
model
data[data$cluster]<-model$data.clust
data$cluster<-model$data.clust
View(data)
model$data.clust$clust
data[,12:22]<-NULL
View(data)
data$cluster<-model$data.clust$clust
View(data)
glm(data = data, formula = cluster~map+cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,family = quasipoisson(link = logit))
glm(data = data, formula = cluster~map+cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,family = quasibinomial(link = logit))
glm(data = data, formula = cluster~mpg+cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,family = quasibinomial(link = logit))
model_logit<-glm(data = data, formula = cluster~mpg+cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,family = quasibinomial(link = logit))
summary(model_logit)
glm(data = data, formula = cluster~mpg+cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,family = binomial(link = logit))
model_logit<-glm(data = data, formula = cluster~mpg+cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,family = binomial(link = logit))
summary(model_logit)
model_logit<-glm(data = data, formula = cluster~mpg+cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb,family = quasibinomial(link = logit))
summary(model_logit)
model_logit<-glm(data = data, formula = cluster~mpg+cyl+hp+drat+wt+qsec+vs+am+gear+carb,family = quasibinomial(link = logit))
summary(model_logit)
model_logit<-glm(data = data, formula = cluster~mpg+cyl+hp+drat+qsec+vs+am+gear+carb,family = quasibinomial(link = logit))
summary(model_logit)
model_logit$formula
model_logit$method
model_logit$contrasts
model_logit$effects
predict(model_logit,newdata = Training)
predict(model_logit,newdata = data)
predict_hat<-predict(model_logit,newdata = data)
library(Metrics)
mse(actual = data$cluster,predicted = model_logit)
?cdplot
cdplot(cluster~drat)
cdplot(cluster~drat,data=data)
cdplot(drat~cluster,data=data)
cdplot(cluster~cyl,data=data)
cdplot(cluster~gear,data=data)
cdplot(cluster~mpg,data=data)
curve(cluster~mpg,data=data)
?curve
curve(sin())
curve(sin
)
curve(x^3)
curve(model_logit)
curve(expr = model_logit)
exit
exit
quit()
iris
data<-iris
library(rpart)
data
head(data)
ratio<-sample(x = 1:nrow(data),size=0.25*nrow(data))
training<-data[ratio]
ratio<-sample(1:nrow(data),size=0.25*nrow(data))
training<-data[ratio]
ratio
ratio<-sample(1:nrow(data),size=0.0025*nrow(data))
ratio
ratio<-sample(1:nrow(data),size=0.025*nrow(data))
ratio
ratio<-sample(1:nrow(data),size=0.025*1:nrow(data))
ratio
ratio<-sample(x = 1:nrow(data),size= 0.25*nrow(data))
ratio
Training<-data[ratio,]
Test<-data[-ratio,]
set.seed(100)
library(ROCR)
install.packages("ROCR")
library(ROCR)
library(ggplot2)
View(Training)
library(readr)
rtree<-rpart(data = Training,formula = Species ~ Sepal.Length+Sepal.Width+Petal.Length+Petal.Width,method = "class")
rpart.plot(rtree)
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(rtree)
tree_fit<-ctree(formula=Species ~ Sepal.Length+Sepal.Width+Petal.Length+Petal.Width)
?ctree
??ctree
library(party)
install.packages("party")
install.packages("party")
tree_fit<-ctree(formula=Species ~ Sepal.Length+Sepal.Width+Petal.Length+Petal.Width,data=Training)
rpart.plot(tree_fit)
rpart.plot(tree_fit)
ploto(tree_fit)
plot(tree_fit)
library(magrittr)
tree_roc<-tree_fit%>%
predict(newdata=Test)>%>
tree_roc<-tree_fit%>%
predict(newdata=Test)%>%
prediction(Test$Species) %>%
performance("tpr","fpr")
tree_roc<-tree_fit%>%
predict(newdata=Test)%>%
prediction(Test) %>%
performance("tpr","fpr")
> tree_roc<-tree_fit%>%
+ predict(newdata=Test)%>%
+ prediction(Test$Species) %>%
+ performance("tpr","fpr")
> tree_roc<-tree_fit%>%
+ predict(newdata=data)%>%
+ prediction(Test$Species) %>%
+ performance("tpr","fpr")
tree_fit
pred<-prediction(tree_fit,Test$Species))
pred<-prediction(tree_fit,Test$Species)
pred<-prediction(rtree,Test$Species)
pred<-prediction(rtree$y,Test$Species)
rtree
rtree$frame
rtree$where
rtree$call
rtree$terms
rtree$y
rtree$ordered
rtree$variable.importance
rtree$splits
rtree$numresp
rtree$method
rtree$cptable
rtree$y
count(rtree$y)
count.fields(rtree$y)
table(rtree$y)
Training$predict<-(rtree$y)
View(Test)
View(Training)
pred<-prediction(Training$Species,Test$Species)
pred<-prediction(Training$Species)
tree_roc <- tree_fit %>%
predict(newdata = .data$test) %>%
prediction(.data$test$survived) %>%
performance("tpr", "fpr")
tree_roc <- tree_fit %>%
predict(newdata = Test) %>%
prediction(Training$Species) %>%
performance("tpr", "fpr")
tree_roc <- tree_fit %>%
predict(newdata = Test) %>%
prediction(Test$Species) %>%
performance("tpr", "fpr")
tree_roc <- tree_fit %>%
predict(newdata = Test) %>%
prediction(Test) %>%
performance("tpr", "fpr")
tree_roc <- tree_fit %>%
predict(newdata = Test) %>%
prediction(Test$Sepal.Length) %>%
performance("tpr", "fpr")
plot(tree_fit)
plot(tree_fit)
tree_fit
tree_fit$
tree_fit
tree_fit<-ctree(Species~Sepal.Length+ Sepal.Width+ Petal.Length+Petal.Width,data=Training)
plot(tree_fit)
exit()
quit()
install.packages("UsingR")
library(UsingR)
data("galton")
data<-data("galton")
data<-data(galton)
data<-data("galton")
data<-as.data.frame(data("galton"))
View(data)
data<-as.data.frame("galton")
data("Galton")
data(Galton)
data(Galton$)
data(Galton)
View(Galton)
hist(Galton$parent)
hist(Galton$child)
plot(Galton$parent,Galton$child)
lm1<-lm(Galton$child~Galton$parent)
parent0<-rnorm(nobs,sd = sd(Galton$parent),mean=mean(Galton$parent))
parent0<-rnorm(nobs,sd = sd(Galton$parent),mean=mean(Galton$parent))
parent0<-rnorm(n = 500,sd = sd(Galton$parent),mean=mean(Galton$parent))
parent0
childo<-lm1$coefficients[1]+lm1$coefficients[2]*parent0+rnomr(n=500,sd=summary(lm1)$sigma)
childo<-lm1$coefficients[1]+lm1$coefficients[2]*parent0+rnom(n=500,sd=summary(lm1)$sigma)
childo<-lm1$coefficients[1]+lm1$coefficients[2]*parent0+rnorm(n=500,sd=summary(lm1)$sigma)
plot(Galton$parent,Galton$child)
plot(parent0,childo,col="blue)"
plot(parent0,childo,col="blue")
par(nfrow=c(1,2))
par(mfrow=c(1,2))
plot(Galton$parent,Galton$child)
plot(parent0,childo,col="blue")
library(corrplot)
library(plspm)
library(corrplot)
library(plspm)
library(GGally)
setwd("/Users/Catarina/dropbox/Paulo - Data Science (R,Python, Netlogo, Tableau)/Rstudio/Pls_flexibility_rh")
data<-read.csv("data.csv",sep=";")
data[,31:32]<-NULL
data
for (j in 1:30) {
data[,j]<-as.factor(data[,j])
}
model_mca<-MCA(data[,:],ncp=2,graph=TRUE,na.method = "NA")
model_mca<-MCA(data,ncp=2,graph=TRUE,na.method = "NA")
library(FactoMineR)
model_mca<-MCA(data,ncp=2,graph=TRUE,na.method = "NA")
model_hcpc<-HCPC(model_mca)
install.packages("plsdepot")
library(plsdepot)
support<-nipals(data)
support<-nipals(as.numeric(data))
support<-nipals(as.integer(data))
support<-nipals(as.numeric(data))
View(data)
head(data)
colnames(data)
nipals(data[,1:30])
colMeans(data)
colMeans(data[,1])
for (j in 1:30) {
data[,j]<-as.numeric(data[,j])
}
nipals(data)
plot(nipals(data))
individual=c(0,0,0,1)
grupo=c(0,0,0,1)
organizacional=c(1,1,0,0)
flexibilidade=c(0,0,0,0)
flex_path=rbind(individual,grupo,organizacional,flexibilidade)
flex_path=rbind(individual,grupo,organizacional,flexibilidade)
colnames(flex_path)=rownames(flex_path)
innerplot(flex_path,box.size=0.1)
flex_block=list(1:6,7:9,10:21,22:30)
flex_mode=rep("A",4)
flex_pls_1<-plspm(Data = data,path_matrix = flex_path,blocks =  flex_block,modes = flex_mode)
flex_pls_1<-plspm(Data = data,path_matrix = flexibilidade=c(0,0,0,0)
grupo=c(1,0,0,0)
individual=c(1,0,0,0)
organizacional=c(0,1,1,0)flex_path,blocks =  flex_block,modes = flex_mode)
flexibilidade=c(0,0,0,0)
grupo=c(1,0,0,0)
individual=c(1,0,0,0)
organizacional=c(0,1,1,0)
flex_path=rbind(flexibilidade,grupo,individual,organizacional)
colnames(flex_path)=rownames(flex_path)
innerplot(flex_path,box.size=0.1)
flex_block=list(22:30,7:9,1:6,10:21)
flex_mode=rep("A",4)
flex_pls_1<-plspm(Data = data,path_matrix = flex_path,blocks =  flex_block,modes = flex_mode)
print flex_pls_1
print (flex_pls_1)
flex_pls_1$outer_model
flex_pls_1$inner_model
flex_pls_1$path_coefs
flex_pls_1$scores
flex_pls_1$crossloadings
flex_pls_1$unidim
plot(flex_pls_1$unidim)
plot(flex_pls_1,what = "loadings")
plot(flex_pls_1$unidim)
plot(flex_pls_1,what = "loadings")
flex_pls_1$gof
flex_pls_1$boot
flex_pls_1$unidim
flex_pls_1$outer_model
flex_pls_1$crossloadings
plot(flex_pls_1)
plot(flex_pls_1,arr.pos = 0.35)
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente")
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo")
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=arrow_lwd)
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=10*round(flex_pls_1$path_coefs,2))
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=100*round(flex_pls_1$path_coefs,2))
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=20*round(flex_pls_1$path_coefs,2))
data<-read.csv("data.csv",sep=";")
data<-read.csv("data.csv",sep=";")
data<-read.csv("data.csv",sep=";")
data[,31:32]<-NULL
hist(data[,35])
corrplot::corrplot(cor(data),method = "color" ,sig.level = 0.01,is.corr = TRUE,order = "AOE",type = "lower",hclust.method = "complete",title = "Matriz de correlação entre as variáveis")
corrplot::corrplot(cor(data),method = "color" ,sig.level = 0.01,is.corr = TRUE,order = "AOE",type = "lower",hclust.method = "complete",title = "Matriz de correlação entre as variáveis")
data<-read.csv("data.csv",sep=";",na.rm=TRUE)
data<-read.csv("data.csv",sep=";",na.strings = TRUE)
corrplot::corrplot(cor(data),method = "color" ,sig.level = 0.01,is.corr = TRUE,order = "AOE",type = "lower",hclust.method = "complete",title = "Matriz de correlação entre as variáveis")
corrplot::corrplot(cor(data[,1:30]),method = "color" ,sig.level = 0.01,is.corr = TRUE,order = "AOE",type = "lower",hclust.method = "complete",title = "Matriz de correlação entre as variáveis")
flexibilidade=c(0,0,0,0)
grupo=c(1,0,0,0)
individual=c(1,0,0,0)
organizacional=c(0,1,1,0)
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=20*round(flex_pls_1$path_coefs,2))
flex_path=rbind(flexibilidade,grupo,individual,organizacional)
colnames(flex_path)=rownames(flex_path)
innerplot(flex_path,box.size=0.1)
flex_block=list(22:30,7:9,1:6,10:21)
flex_mode=rep("A",4)
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=20*round(flex_pls_1$path_coefs,2))
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo")
hist(data[,39])
hist(data[,37])
hist(data[,38])
hist(data[,34])
hist(data[,35])
hist(data[,35])
hist(data[,36])
hist(data[,39])
plspm.groups(flex_pls_1,data[,39],method = "bootstrap")
plspm.groups(flex_pls_1,as.factor(data[,39]),method = "bootstrap")
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=20*round(flex_pls_1$path_coefs,2))
flex_pls_1$unidim
plot(flex_pls_1,what="loadings")
flex_pls_1$outermodel
flex_pls_1$outer_model
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))
library(ggplot2)
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_line(yintercept=0.7,color="gray50")
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_line(ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_line(yintercept=0.7,color="gray50"),color="gray50")
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_line(yintercept=0.7,color="gray50")
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_line(yintercept=0.7,color="gray50")
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_hline(yintercept=0.7,color="gray50")
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_hline(yintercept=0.7,color="gray50")+
ggtitle("Barchart de loadings - 1º modelo")+
theme(axis.text.x=element_text(angle=90))
flex_pls_1$model
data<-read.csv("data.csv",sep=";",na.strings=TRUE)
corrplot::corrplot(cor(data[,1:30]),method = "color" ,sig.level = 0.01,is.corr = TRUE,order = "AOE",type = "lower",hclust.method = "complete",title = "Matriz de correlação entre as variáveis")
flexibilidade=c(0,0,0,0)
grupo=c(1,0,0,0)
individual=c(1,0,0,0)
organizacional=c(0,1,1,0)
flex_path=rbind(flexibilidade,grupo,individual,organizacional)
colnames(flex_path)=rownames(flex_path)
innerplot(flex_path,box.size=0.1)
flex_block_1=list(22:30,7:9,1:6,10:21)
flex_mode=rep("A",4)
#Modelo 1 PLSPM
flex_pls_1<-plspm(Data = data,path_matrix = flex_path,blocks =  flex_block_1,modes = flex_mode)
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=20*round(flex_pls_1$path_coefs,2))
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_hline(yintercept=0.7,color="gray50")+
ggtitle("Barchart de loadings - 1º modelo")+
theme(axis.text.x=element_text(angle=90))
data<-read.csv("data.csv",sep=";",na.strings=TRUE)
flexibilidade=c(0,0,0,0)
grupo=c(1,0,0,0)
individual=c(1,0,0,0)
organizacional=c(0,1,1,0)
flex_path=rbind(flexibilidade,grupo,individual,organizacional)
colnames(flex_path)=rownames(flex_path)
innerplot(flex_path,box.size=0.1)
flex_block_1=list(22:30,7:9,1:6,10:21)
flex_mode=rep("A",4)
#Modelo 1 PLSPM
flex_pls_1<-plspm(Data = data,path_matrix = flex_path,blocks =  flex_block_1,modes = flex_mode)
plot(flex_pls_1,arr.pos = 0.35,main="Caminho de coeficiente - 1º modelo",arr.lwd=20*round(flex_pls_1$path_coefs,2))
ggplot(data=flex_pls_1$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_hline(yintercept=0.7,color="gray50")+
ggtitle("Barchart de loadings - 1º modelo")+
theme(axis.text.x=element_text(angle=90))
flex_block_2=list(c(23,24,27,28,29,30),7:9,1:6,c(13:16,18:21))
flex_pls_2<-plspm(Data = data,path_matrix = flex_path,blocks =  flex_block_2,modes = flex_mode)
plot(flex_pls_2,arr.pos = 0.35,main="Caminho de coeficiente - 2º modelo",arr.lwd=20*round(flex_pls_2$path_coefs,2))
flex_pls_2unidim # primeira análise
flex_pls_2$unidim # primeira análise
plot(flex_pls_2,what="loadings")
flex_pls_2$outer_model # segunda análise
ggplot(data=flex_pls_2$outer_model, aes(x=name,y=loading,fill=block))+
geom_bar(stat="identity",position="dodge")+
geom_hline(yintercept=0.7,color="gray50")+
ggtitle("Barchart de loadings - 2º modelo")+
theme(axis.text.x=element_text(angle=90))
flex_pls_2$crossloadings
ggplot(data=flex_pls_2,mapping = aes(flex_pls_2$crossloadings))
ggplot(data=as.data.frame(flex_pls_2)[1],mapping = aes(flex_pls_2$crossloadings))
flex_pls_2$crossloadings[1]
flex_pls_2$crossloadings[2]
flex_pls_2$crossloadings[3]
flex_pls_2$crossloadings
as.data.frame(flex_pls_2$crossloadings)
data_cross_2<-as.data.frame(flex_pls_2$crossloadings)
View(data_cross_2)
data_cross_2<-as.data.frame(flex_pls_2$crossloadings)
ggplot(data = data_cross_2,aes(x=data_cross_2$block,y=data_cross_2[,3:6]))
ggplot(data = data_cross_2,aes(x=data_cross_2$block,y=data_cross_2[,3]))
ggplot(data = data_cross_2,aes(x=data_cross_2$block,x=data_cross_2$block))
ggplot(data = data_cross_2)+geom_raster(mapping = aes(y=flexibilidade,x=flexibilidade))
ggplot(data = data_cross_2)+geom_raster(mapping = aes(y=flexibilidade,x=flexibilidade,fill=flexibilidade))
ggplot(data = data_cross_2)+geom_raster(mapping = aes(y=data_cross_2[,3:6],x=flexibilidade,fill=flexibilidade))
ggplot(data = data_cross_2)+geom_raster(mapping = aes(y=data_cross_2[,3:6],fill=flexibilidade))
ggplot(data = data_cross_2,aes(x=flexibilidade,y=flexibilidade))+geom_raster(mapping = aes(y=data_cross_2[,3:6],fill=))
ggplot(data = data_cross_2,aes(x=flexibilidade,y=flexibilidade))+geom_raster()
ggplot(data = data_cross_2,aes(x=flexibilidade,y=grupo))+geom_raster()
data_cross_2$name
data_cross_2$grupo
data_cross_2$grupo[1]
ggplot(data = data_cross_2,aes(x=colnames(data_cross_2[,2:6]),y=(data_cross_2[,2:6])))+geom_raster()
ggplot(data = data_cross_2,aes(x=colnames(data_cross_2[,2:6]),y=(data_cross_2[,2:6])))+geom_raster()
ggplot(data = data_cross_2,aes(y=(data_cross_2[,2:6])))+geom_raster()
ggplot(data = data_cross_2,aes((data_cross_2[,2:6])))+geom_raster()
ggplot(data_cross_2, aes(x=data_cross_2[,2:6], y=data_cross_2[,2:6])) + xlim(4, 10) + ylim(4, 10)
ggplot(data_cross_2, aes(x=data_cross_2[,2:6], y=data_cross_2[,2:6])) + xlim(0,1) + ylim(0, 1)
ggplot(data_cross_2, aes(x=data_cross_2[,2], y=data_cross_2[,3])) + xlim(0,1) + ylim(0, 1)
ggplot(data_cross_2, aes(x=data_cross_2, y=data_cross_2)) + xlim(0,1) + ylim(0, 1)
ggplot(data_cross_2[,2:6], aes(x=data_cross_2, y=data_cross_2)) + xlim(0,1) + ylim(0, 1)
ggplot(data_cross_2[,2:6], aes(x=data_cross_2[,2:6], y=data_cross_2[,2:6])) + xlim(0,1) + ylim(0, 1)
ggplot(data_cross_2[,2:6], aes(x=data_cross_2[,2:6], y=data_cross_2)) + xlim(0,1) + ylim(0, 1)
ggplot(data_cross_2[,2:6], aes(x=data_cross_2[,2:6], y=data_cross_2))
ggplot(data_cross_2[,2:6], aes(x=data_cross_2[,2:6], y=data_cross_2),fill=1)
ggplot(data_cross_2[,2:6], aes(x=data_cross_2[,2:6], y=data_cross_2),fill=individual)
ggplot(data_cross_2[,2:6], aes(x=flexibilidade,y=grupo),fill=individual)
ggplot(data_cross_2[,2:6], aes(x=flexibilidade,y=grupo,fill=individual))+geom_bin2d()
data_cross_2<-as.data.frame(flex_pls_2$crossloadings)
data_cross_2
as.data.frame(flex_pls_2$crossloadings) # Terceira análise
flex_pls_2$inner_model
flex_pls_2$effects	# Quinta análise
flex_pls_2$inner_summary	# Sexta análise
(flex_pls_2$gof)
flex_pls_2$gof
flex_pls_2$gof
flex_pls_3<-plspm(Data = data,path_matrix = flex_path,blocks =  flex_block_2,modes = flex_mode,boot.val = TRUE,br=2000)
flex_pls_3$boot
flex_pls_3$boot$paths
flex_pls_3$scores
head(flex_pls_3$scores)
hist(flex_pls_3$scores[,1])
hist(flex_pls_3$scores[,2])
table(data[,37])
cut?
?cut
Z <- stats::rnorm(10000)
table(cut(Z, breaks = -6:6))
sum(table(cut(Z, breaks = -6:6, labels = FALSE)))
sum(graphics::hist(Z, breaks = -6:6, plot = FALSE)$counts)
cut(rep(1,5), 4) #-- dummy
tx0 <- c(9, 4, 6, 5, 3, 10, 5, 3, 5)
x <- rep(0:8, tx0)
stopifnot(table(x) == tx0)
aaa <- c(1,2,3,4,5,2,3,4,5,6,7)
cut(aaa, 3)
cut(aaa, 3, dig.lab = 4, ordered = TRUE)
table(cut(Z, breaks = -6:6))
cut(data[,37],breaks = 2)
table(cut(data[,37],breaks = 2))
table(cut(data[,37],breaks = 3))
table(cut(data[,37],breaks = 2))
library(dplyr)
mutate(data[,37],
mutate(data,
library(plyr)
typeof(data[,37])
(data[,37])<-as.factor(data[,37])
data[,37]<-as.factor(data[,37])
data$type<-mapvalues(data[,37],from=c("1","2","3","4","5"),to = c("1","1","1","2","1"))
View(data)
data[,37]<-as.factor(data[,37])
data$type<-mapvalues(data[,37],from=c("1","2","3","4","5"),to = c("Não-privado","Não-privado","Não-privado","Privado","Não-privado"))
plspm.groups(flex_pls_3,group = data[,38],method="permutation")
plspm.groups(flex_pls_3,group = data[,38],method="permutation",reps = 2000)
